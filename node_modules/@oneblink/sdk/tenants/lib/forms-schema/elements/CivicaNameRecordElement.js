"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.type = void 0;
const joi_1 = __importDefault(require("joi"));
const property_schemas_1 = require("../property-schemas");
exports.type = 'civicaNameRecord';
const boolSchema = joi_1.default.boolean().default(false);
const textSchema = joi_1.default.string();
exports.default = joi_1.default.object({
    ...property_schemas_1.baseSchemas,
    name: property_schemas_1.name,
    label: property_schemas_1.label,
    hint: property_schemas_1.hint,
    ...property_schemas_1.requiredSchemas,
    readOnly: property_schemas_1.readOnly,
    ...property_schemas_1.conditionallyShowSchemas,
    useGeoscapeAddressing: joi_1.default.boolean().default(false),
    titleLabel: textSchema,
    familyNameLabel: textSchema,
    givenName1Label: textSchema,
    givenName1IsRequired: boolSchema,
    givenName1IsHidden: boolSchema,
    emailAddressLabel: textSchema,
    emailAddressIsRequired: boolSchema,
    emailAddressIsHidden: boolSchema,
    homePhoneLabel: textSchema,
    homePhoneIsRequired: boolSchema,
    homePhoneIsHidden: boolSchema,
    businessPhoneLabel: textSchema,
    businessPhoneIsRequired: boolSchema,
    businessPhoneIsHidden: boolSchema,
    mobilePhoneLabel: textSchema,
    mobilePhoneIsRequired: boolSchema,
    mobilePhoneIsHidden: boolSchema,
    faxPhoneLabel: textSchema,
    faxPhoneIsRequired: boolSchema,
    faxPhoneIsHidden: boolSchema,
    streetAddressesLabel: textSchema,
    address1Label: textSchema,
    address2Label: textSchema,
    postcodeLabel: textSchema,
    customCssClasses: property_schemas_1.customCssClasses,
});
//# sourceMappingURL=CivicaNameRecordElement.js.map