"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.type = void 0;
const joi_1 = __importDefault(require("joi"));
const common_1 = require("../common");
const property_schemas_1 = require("../property-schemas");
exports.type = 'files';
exports.default = joi_1.default.object({
    ...property_schemas_1.baseSchemas,
    name: property_schemas_1.name,
    label: property_schemas_1.label,
    readOnly: property_schemas_1.readOnly,
    hint: property_schemas_1.hint,
    storageType: property_schemas_1.storageType,
    restrictFileTypes: joi_1.default.boolean().default(false),
    restrictedFileTypes: joi_1.default.when('restrictFileTypes', {
        is: joi_1.default.valid(true),
        then: joi_1.default.array().items(joi_1.default.string()).required(),
        otherwise: joi_1.default.any().strip(),
    }),
    allowExtensionlessAttachments: joi_1.default.boolean().default(false),
    defaultValue: joi_1.default.array().items(common_1.attachment),
    minEntries: joi_1.default.number().min(0),
    maxEntries: joi_1.default.number().when('minEntries', {
        is: joi_1.default.number().required().min(0),
        then: joi_1.default.number().min(joi_1.default.ref('minEntries', { render: true })),
        otherwise: joi_1.default.number().min(0),
    }),
    ...property_schemas_1.conditionallyShowSchemas,
    ...property_schemas_1.lookupSchemas,
    customCssClasses: property_schemas_1.customCssClasses,
});
//# sourceMappingURL=FilesElement.js.map