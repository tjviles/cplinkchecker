"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const querystring_1 = __importDefault(require("querystring"));
const node_fetch_1 = __importDefault(require("node-fetch"));
const package_1 = __importDefault(require("./package"));
const generate_jwt_1 = __importDefault(require("./generate-jwt"));
const generate_tenant_1 = __importDefault(require("./generate-tenant"));
const tenant_configuration_1 = require("./tenant-configuration");
async function getResponseErrorMessage(response) {
    // The request was made and the server responded with
    // a status code that falls out of the range of 2xx
    const contentType = response.headers.get('content-type');
    if (!contentType || !contentType.toLowerCase().includes('application/json')) {
        return await response.text();
    }
    const body = await response.json();
    if (body && body.message) {
        return body.message;
    }
    return 'OneBlink API Internal Server Error';
}
class OneBlinkAPI {
    constructor(accessKey, secretKey) {
        if (!accessKey || typeof accessKey !== 'string') {
            throw new TypeError('Must supply Access Key as a string');
        }
        if (!secretKey || typeof secretKey !== 'string') {
            throw new TypeError('Must supply Secret Key as a string');
        }
        // 5 minute expiry
        this.jwtExpiry = 300;
        this.accessKey = accessKey;
        this.secretKey = secretKey;
    }
    /** @internal */
    get defaultRequestHeaders() {
        return {
            Accept: 'application/json',
            'Content-Type': 'application/json',
            'User-Agent': `Node.js ${package_1.default.name} / ${package_1.default.version}`,
            Authorization: `Bearer ${(0, generate_jwt_1.default)(this.accessKey, this.secretKey, this.jwtExpiry)}`,
        };
    }
    /** @internal */
    async request({ origin, method, path, body, headers, }) {
        const response = await (0, node_fetch_1.default)(`${origin}${path}`, {
            method,
            headers: {
                ...this.defaultRequestHeaders,
                ...headers,
            },
            body,
        });
        if (!response.ok) {
            // The request was made and the server responded with
            // a status code that falls out of the range of 2xx
            const errorMessage = await getResponseErrorMessage(response);
            const error = new Error(errorMessage);
            error.name = 'OneBlinkAPIError';
            throw error;
        }
        return response;
    }
    /** @internal */
    async getRequest(path) {
        const response = await this.request({
            origin: OneBlinkAPI.tenant.apiOrigin,
            method: 'GET',
            path,
        });
        return await response.json();
    }
    /** @internal */
    async searchRequest(path, searchParams) {
        const search = querystring_1.default.stringify(searchParams || {});
        return await this.getRequest(`${path}?${search}`);
    }
    /** @internal */
    async putRequest(path, payload) {
        const response = await this.request({
            origin: OneBlinkAPI.tenant.apiOrigin,
            method: 'PUT',
            path,
            body: JSON.stringify(payload),
        });
        return await response.json();
    }
    /** @internal */
    async postRequest(path, payload) {
        const response = await this.request({
            origin: OneBlinkAPI.tenant.apiOrigin,
            method: 'POST',
            path,
            body: JSON.stringify(payload),
        });
        return await response.json();
    }
    /** @internal */
    async postEmptyRequest(path) {
        const response = await this.request({
            origin: OneBlinkAPI.tenant.apiOrigin,
            method: 'POST',
            path,
        });
        return await response.json();
    }
    /** @internal */
    async deleteRequest(path) {
        await this.request({
            origin: OneBlinkAPI.tenant.apiOrigin,
            method: 'DELETE',
            path,
        });
    }
}
exports.default = OneBlinkAPI;
/** @internal */
OneBlinkAPI.tenant = (0, generate_tenant_1.default)(tenant_configuration_1.ONEBLINK);
//# sourceMappingURL=one-blink-api.js.map