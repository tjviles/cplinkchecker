"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const jsonwebtoken_1 = __importDefault(require("jsonwebtoken"));
async function verifyJwt(token, tenant) {
    if (token.includes('Bearer ')) {
        token = token.split(' ')[1];
    }
    const getSigningKey = (header, callback) => {
        if (!header.kid) {
            callback(new Error('jwt does not contain a "kid" claim'));
            return;
        }
        tenant.jwksInstance.getSigningKey(header.kid, (error, key) => {
            if (error) {
                callback(error);
            }
            else {
                callback(null, key === null || key === void 0 ? void 0 : key.getPublicKey());
            }
        });
    };
    return await new Promise((resolve, reject) => {
        jsonwebtoken_1.default.verify(token, getSigningKey, {
            algorithms: ['RS256'],
            issuer: tenant.jwtIssuer,
        }, (error, decoded) => {
            if (error) {
                reject(error);
            }
            else if (!decoded) {
                reject(new Error('Could not decode token payload'));
            }
            else {
                resolve(decoded);
            }
        });
    });
}
exports.default = verifyJwt;
//# sourceMappingURL=verify-jwt.js.map