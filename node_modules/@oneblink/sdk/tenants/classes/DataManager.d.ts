import { FormStoreDefinition } from '@oneblink/types/typescript/submissions';
import OneBlinkAPI from '../lib/one-blink-api';
import { ConstructorOptions, SearchDataManagerRecordsOptions, SearchDataManagerRecordsResponse } from '../types';
export default class DataManager extends OneBlinkAPI {
    /**
     * #### Example
     *
     * ```typescript
     * const OneBlink = require('@oneblink/sdk')
     *
     * const options = {
     *   accessKey: '123455678901ABCDEFGHIJKL',
     *   secretKey: '123455678901ABCDEFGHIJKL123455678901ABCDEFGHIJKL',
     * }
     *
     * const dataManager = new OneBlink.DataManager(options)
     * ```
     */
    constructor(options: ConstructorOptions);
    /**
     * #### Example
     *
     * ```javascript
     * const { formId, formElements } = await dataManager.getFormDefinition(2)
     * ```
     *
     * @param id The form ID to get the definition for.
     * @returns
     */
    getFormDefinition(id: number): Promise<FormStoreDefinition>;
    /**
     * #### Example
     *
     * ```javascript
     * const { submissions, meta } = await dataManager.searchRecords({
     *   formId: 1,
     * })
     * // Use data here...
     * ```
     *
     * @param options The options for the Search Request
     * @returns
     */
    searchRecords(options: SearchDataManagerRecordsOptions): Promise<SearchDataManagerRecordsResponse>;
}
