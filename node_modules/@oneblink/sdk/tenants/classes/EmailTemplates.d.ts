import OneBlinkAPI from '../lib/one-blink-api';
import { EmailTemplateTypes } from '@oneblink/types';
import { ConstructorOptions, EmailTemplatesSearchOptions, EmailTemplatesSearchResult } from '../types';
export default class EmailTemplates extends OneBlinkAPI {
    /**
     * #### Example
     *
     * ```typescript
     * const OneBlink = require('@oneblink/sdk')
     *
     * const options = {
     *   accessKey: '123455678901ABCDEFGHIJKL',
     *   secretKey: '123455678901ABCDEFGHIJKL123455678901ABCDEFGHIJKL',
     * }
     * const emailTemplates = new OneBlink.EmailTemplates(options)
     * ```
     */
    constructor(options: ConstructorOptions);
    /**
     * #### Example
     *
     * ```javascript
     * const searchParams = {
     *   limit: 1,
     *   offset: 0,
     * }
     * const { emailTemplates, meta } =
     *   await emailTemplates.searchEmailTemplates(searchParams)
     * ```
     *
     * @param searchParams Search options
     */
    searchEmailTemplates(searchParams: EmailTemplatesSearchOptions): Promise<EmailTemplatesSearchResult>;
    /**
     * #### Example
     *
     * ```javascript
     * const emailTemplate = await emailTemplates.getEmailTemplate(1)
     * // Use data here...
     * ```
     *
     * @param id The id of the email template
     */
    getEmailTemplate(id: number): Promise<EmailTemplateTypes.EmailTemplate>;
    /**
     * #### Example
     *
     * ```javascript
     * const data = {
     *   name: 'my template',
     *   organisationId: 'abc123',
     *   environments: [
     *     {
     *       template: 'My email template {{custom:my-custom-tag}}',
     *       formsAppEnvironmentId: 1,
     *     },
     *   ],
     *   type: 'FORM_SUBMISSION_EVENT_PDF',
     * }
     * const emailTemplate = await emailTemplates.createEmailTemplate(data)
     * // Use emailTemplate here...
     * ```
     *
     * @param data The data for the new email template
     */
    createEmailTemplate(data: EmailTemplateTypes.NewEmailTemplate): Promise<EmailTemplateTypes.EmailTemplate>;
    /**
     * #### Example
     *
     * ```javascript
     * const data = {
     *   id: 1,
     *   name: 'my updated template',
     *   organisationId: 'abc123',
     *   environments: [
     *     {
     *       template: 'My email template {{custom:my-custom-tag}}',
     *       formsAppEnvironmentId: 1,
     *     },
     *   ],
     *   type: 'FORM_SUBMISSION_EVENT_PDF',
     * }
     * const emailTemplate = await emailTemplates.updateEmailTemplate(data)
     * // Use emailTemplate here...
     * ```
     *
     * @param data The data for the email template to update
     */
    updateEmailTemplate(data: EmailTemplateTypes.EmailTemplate): Promise<EmailTemplateTypes.EmailTemplate>;
    /**
     * #### Example
     *
     * ```javascript
     * await emailTemplates.deleteEmailTemplate(1)
     * ```
     *
     * @param id The id of the email template to delete
     */
    deleteEmailTemplate(id: number): Promise<void>;
}
