"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.displayABNNumberFromABNRecord = exports.getABNNumberFromABNRecord = exports.displayBusinessNameFromABNRecord = exports.getBusinessNameFromABNRecord = void 0;
const createLegalName = ({ familyName, givenName, otherGivenName, }) => {
    let legalName = '';
    // Concat last name
    if (familyName)
        legalName += `${familyName}, `;
    // Concat first name
    if (givenName)
        legalName += `${givenName} `;
    // Concat middle name
    if (otherGivenName)
        legalName += `${otherGivenName}`;
    return legalName;
};
/**
 * Attempts to get the most relevant business name from the data returned in an
 * `ABNRecord`. Will return `undefined` if a suitable name is not found.
 *
 * #### Example
 *
 * ```js
 * const businessName = abnService.getBusinessNameFromABNRecord(abnRecord)
 * ```
 *
 * @param abnRecord
 * @returns
 */
const getBusinessNameFromABNRecord = (abnRecord) => {
    var _a, _b;
    if (abnRecord.entityType.entityTypeCode === 'IND' && abnRecord.legalName) {
        const legalName = createLegalName(abnRecord.legalName);
        if (legalName)
            return legalName.trim();
    }
    if ((_a = abnRecord.mainName) === null || _a === void 0 ? void 0 : _a.organisationName) {
        return abnRecord.mainName.organisationName;
    }
    if ((_b = abnRecord.mainTradingName) === null || _b === void 0 ? void 0 : _b.organisationName) {
        return abnRecord.mainTradingName.organisationName;
    }
    if (abnRecord.legalName) {
        const legalName = createLegalName(abnRecord.legalName);
        if (legalName)
            return legalName.trim();
    }
};
exports.getBusinessNameFromABNRecord = getBusinessNameFromABNRecord;
/**
 * Get the most relevant business name from the data returned in an `ABNRecord`.
 * Will return "Unknown Business Name" if a suitable name is not found.
 *
 * #### Example
 *
 * ```js
 * const businessName =
 *   abnService.displayBusinessNameFromABNRecord(abnRecord)
 * ```
 *
 * @param abnRecord
 * @returns
 */
const displayBusinessNameFromABNRecord = (abnRecord) => {
    const businessName = (0, exports.getBusinessNameFromABNRecord)(abnRecord);
    return businessName || 'Unknown Business Name';
};
exports.displayBusinessNameFromABNRecord = displayBusinessNameFromABNRecord;
/**
 * Attempts to get the most recent ABN number from the data returned in an
 * `ABNRecord`. Will return `undefined` if an ABN is not found.
 *
 * #### Example
 *
 * ```js
 * const ABN = abnService.getABNNumberFromABNRecord(abnRecord)
 * ```
 *
 * @param abnRecord
 * @returns
 */
const getABNNumberFromABNRecord = (abnRecord) => {
    if (!abnRecord.ABN)
        return;
    if (Array.isArray(abnRecord.ABN)) {
        const relevantABN = abnRecord.ABN.find((abn) => abn.isCurrentIndicator === 'Y');
        return relevantABN === null || relevantABN === void 0 ? void 0 : relevantABN.identifierValue;
    }
    return abnRecord.ABN.identifierValue;
};
exports.getABNNumberFromABNRecord = getABNNumberFromABNRecord;
/**
 * Attempts to get the most recent ABN number from the data returned in an
 * `ABNRecord`. Will return "Unknown ABN Number" if an ABN is not found.
 *
 * #### Example
 *
 * ```js
 * const ABN = abnService.displayABNNumberFromABNRecord(abnRecord)
 * ```
 *
 * @param abnRecord
 * @returns
 */
const displayABNNumberFromABNRecord = (abnRecord) => {
    const abnNumber = (0, exports.getABNNumberFromABNRecord)(abnRecord);
    return abnNumber || 'Unknown ABN Number';
};
exports.displayABNNumberFromABNRecord = displayABNNumberFromABNRecord;
//# sourceMappingURL=abnService.js.map