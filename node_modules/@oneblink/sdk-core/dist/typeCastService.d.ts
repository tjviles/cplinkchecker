import { FormTypes, SubmissionEventTypes } from '@oneblink/types';
declare function toNamedElement(e: FormTypes.FormElement): FormTypes.FormElementWithName | undefined;
export declare type NonNestedElementsFormElement = FormTypes.NonNestedElementsElement | FormTypes.FormElementWithForm;
declare const formElements: {
    toOptionsElement: (e: FormTypes.FormElement) => FormTypes.FormElementWithOptions | undefined;
    toFormElementWithForm: (e: FormTypes.FormElement) => FormTypes.FormElementWithForm | undefined;
    toFormElementWithoutForm: (e: FormTypes.FormElement) => FormTypes.FormElementWithoutForm | undefined;
    toLookupElement: (e: FormTypes.FormElement) => FormTypes.LookupFormElement | undefined;
    toNestedElementsElement: (e: FormTypes.FormElement) => FormTypes.NestedElementsElement | undefined;
    toNamelessElement: (e: FormTypes.FormElement) => FormTypes.FormElementWithoutName | undefined;
    toNamedElement: typeof toNamedElement;
    toNonNestedElementsElement: (e: FormTypes.FormElement) => NonNestedElementsFormElement | undefined;
    toPageElement: (e: FormTypes.FormElement) => FormTypes.PageElement | undefined;
    toRepeatableSetElement: (e: FormTypes.FormElement) => FormTypes.RepeatableSetElement | undefined;
    toStorageElement: (e: FormTypes.FormElement) => FormTypes.StorageElement | undefined;
};
declare const submissionEvents: {
    toPaymentSubmissionEvent: (e: SubmissionEventTypes.FormEvent) => SubmissionEventTypes.FormPaymentEvent | undefined;
};
export { formElements, submissionEvents };
